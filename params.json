{"name":"osm-bundler","tagline":"A Python routine for running  Structure From Motion pipeline with Bundler and dense reconstruction with PMVS(CMVS) to reconstruct 3D geometry from a set of photos.  ","body":"\r\n**Introduction**\r\n\r\nThis is a Python routine for running Bundler and PMVS(CMVS). Which was origin from [https://code.google.com/p/osm-bundler/][1]. This routine facility the  Structure From Motion procedure with Bundler and Prepare the required data structure for running PMVS, which is a opensource dense reconstruction software.\r\n\r\n\r\n**Usage**\r\n\r\nYou are supposed to put the requred software in the *software* directory , \r\n\r\n - bundler\r\n - pmvs\r\n - sift-lowe (or vlfeat)\r\n  \r\nthe structure may like below:\r\n\r\n    software\r\n    ----bundler\r\n            Bundle2Ply   \r\n            Bundle2Vis  \r\n            KeyMatchFull    \r\n            RadialUndistort\r\n            Bundle2PMVS  \r\n            bundler     \r\n            libANN_char.so\r\n\r\n    ----pmvs\r\n            cmvs  \r\n            genOption  \r\n            pmvs2\r\n\r\n    ----sift-lowe\r\n            sift\r\n            \r\n \r\n **Note for Linux**\r\n \r\n remember to set `LD_LIBRARY_PATH` to `libANN_char.so` ,otherwise KeyMatchFull may not find the library and crash\r\n\r\nRun this procedure:\r\nPerform point cloud and camera calibration :\r\n\r\n    $ RunBundler.py --photos=\"./examples/MyPhotos\" \r\n\r\n**Note:** The default output will be in the *output* directory in the root of the osm-bundler .\r\nYou could test various option... \r\n    \r\n    $ RunBundler.py\r\n\r\nIn a second step you could compute the dense 3D point cloud in one step if the dataset have a reasonable size.\r\n\r\n    $ RunPMVS.py --bundlerOutputPath=\"output of bundler\" \r\n    \r\n**Note:** bundlerOutputPath shoud be the bundler output directory.\r\n\r\nIf you have a lot of images, it better to use CMVS cluster computation.\r\nIt performs dense 3D point could computation by using Cluster 3D representation of the scene :\r\n\r\n    $ RunCMVS.py --bundlerOutputPath=\"output of bundler\" --ClusterToCompute =\"Number of Desired Cluster\".\r\n    \r\nExample :\r\n\r\n    $ RunCMVS.py --bundlerOutputPath=\"C:/temp/osm-Result\" --ClusterToCompute =\"10\".\r\n\r\n\r\n**Other reference**\r\n\r\nBundler: [http://www.cs.cornell.edu/~snavely/bundler/][2]  \r\n  PMVS2: [http://grail.cs.washington.edu/software/pmvs/][3]  \r\n   CMVS: [http://grail.cs.washington.edu/software/cmvs/][4]  \r\n\r\n\r\n  [1]: https://code.google.com/p/osm-bundler/\r\n  [2]: http://www.cs.cornell.edu/~snavely/bundler/\r\n  [3]: http://grail.cs.washington.edu/software/pmvs/\r\n  [4]: http://grail.cs.washington.edu/software/cmvs/\r\n","google":"UA-36034060-3","note":"Don't delete this file! It's used internally to help with page regeneration."}